basePath: /api
definitions:
  github_com_Brotiger_poker-core_api_core_api_module_auth_request.ConfirmedEmail:
    properties:
      code:
        type: string
      user_id:
        type: string
    type: object
  github_com_Brotiger_poker-core_api_core_api_module_auth_request.Login:
    properties:
      email:
        example: example@example.com
        type: string
      password:
        example: password
        type: string
    required:
    - email
    - password
    type: object
  github_com_Brotiger_poker-core_api_core_api_module_auth_request.Refresh:
    properties:
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2V4YW1wbGUuYXV0aDAuY29tLyIsImF1ZCI6Imh0dHBzOi8vYXBpLmV4YW1wbGUuY29tL2NhbGFuZGFyL3YxLyIsInN1YiI6InVzcl8xMjMiLCJpYXQiOjE0NTg3ODU3OTYsImV4cCI6MTQ1ODg3MjE5Nn0.CA7eaHjIHz5NxeIJoFK9krqaeZrPLwmMmgI_XiQiIkQ
        type: string
    type: object
  github_com_Brotiger_poker-core_api_core_api_module_auth_request.Register:
    properties:
      email:
        example: example@example.com
        type: string
      password:
        example: example
        minLength: 10
        type: string
      username:
        example: example
        minLength: 2
        type: string
    required:
    - email
    - password
    - username
    type: object
  github_com_Brotiger_poker-core_api_core_api_module_auth_response.Register:
    properties:
      id:
        example: 507f191e810c19729de860ea
        type: string
    type: object
  github_com_Brotiger_poker-core_api_core_api_module_auth_response.Token:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2V4YW1wbGUuYXV0aDAuY29tLyIsImF1ZCI6Imh0dHBzOi8vYXBpLmV4YW1wbGUuY29tL2NhbGFuZGFyL3YxLyIsInN1YiI6InVzcl8xMjMiLCJpYXQiOjE0NTg3ODU3OTYsImV4cCI6MTQ1ODg3MjE5Nn0.CA7eaHjIHz5NxeIJoFK9krqaeZrPLwmMmgI_XiQiIkQ
        type: string
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2V4YW1wbGUuYXV0aDAuY29tLyIsImF1ZCI6Imh0dHBzOi8vYXBpLmV4YW1wbGUuY29tL2NhbGFuZGFyL3YxLyIsInN1YiI6InVzcl8xMjMiLCJpYXQiOjE0NTg3ODU3OTYsImV4cCI6MTQ1ODg3MjE5Nn0.CA7eaHjIHz5NxeIJoFK9krqaeZrPLwmMmgI_XiQiIkQ
        type: string
    type: object
  github_com_Brotiger_poker-core_api_core_api_module_game_request.Create:
    properties:
      max_players:
        example: 5
        maximum: 6
        minimum: 3
        type: integer
      name:
        example: test
        type: string
      password:
        example: "123456"
        type: string
    required:
    - max_players
    - name
    type: object
  github_com_Brotiger_poker-core_api_core_api_module_game_response.Create:
    properties:
      _id:
        example: 507f1f77bcf86cd799439011
        type: string
      max_players:
        example: 5
        type: integer
      name:
        example: test
        type: string
      owner_id:
        example: 507f1f77bcf86cd799439011
        type: string
      password:
        example: "123456"
        type: string
      status:
        example: waiting
        type: string
      users:
        example:
        - 507f1f77bcf86cd799439011
        items:
          type: string
        type: array
    type: object
  github_com_Brotiger_poker-core_api_core_api_module_game_response.Game:
    properties:
      count_players:
        example: 3
        type: integer
      id:
        example: 507f1f77bcf86cd799439011
        type: string
      max_players:
        example: 4
        type: integer
      name:
        example: test
        type: string
      owner_id:
        example: 507f1f77bcf86cd799439011
        type: string
      status:
        example: waiting
        type: string
      with_password:
        example: true
        type: boolean
    type: object
  github_com_Brotiger_poker-core_api_core_api_module_game_response.List:
    properties:
      games:
        items:
          $ref: '#/definitions/github_com_Brotiger_poker-core_api_core_api_module_game_response.Game'
        type: array
      total:
        example: 100
        type: integer
    type: object
  response.Error400:
    properties:
      errors: {}
      message:
        type: string
    type: object
  response.Error401:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  title: Core API
paths:
  /auth/confirm_email:
    post:
      parameters:
      - description: Body params
        in: body
        name: request
        schema:
          $ref: '#/definitions/github_com_Brotiger_poker-core_api_core_api_module_auth_request.ConfirmedEmail'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
        "400":
          description: Не валидный запрос.
          schema:
            $ref: '#/definitions/response.Error400'
        "500":
          description: Ошибка сервера.
      summary: Подтверждение почты
      tags:
      - Auth
  /auth/login:
    post:
      parameters:
      - description: Body params
        in: body
        name: request
        schema:
          $ref: '#/definitions/github_com_Brotiger_poker-core_api_core_api_module_auth_request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
          schema:
            $ref: '#/definitions/github_com_Brotiger_poker-core_api_core_api_module_auth_response.Token'
        "400":
          description: Не валидный запрос.
          schema:
            $ref: '#/definitions/response.Error400'
        "401":
          description: Не верное имя пользователя или пароль.
          schema:
            $ref: '#/definitions/response.Error401'
        "500":
          description: Ошибка сервера.
      security:
      - Authorization: []
      summary: Авторизация
      tags:
      - Auth
  /auth/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
        "500":
          description: Ошибка сервера.
      security:
      - Authorization: []
      summary: Выход
      tags:
      - Auth
  /auth/refresh:
    post:
      parameters:
      - description: Body params
        in: body
        name: request
        schema:
          $ref: '#/definitions/github_com_Brotiger_poker-core_api_core_api_module_auth_request.Refresh'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
          schema:
            $ref: '#/definitions/github_com_Brotiger_poker-core_api_core_api_module_auth_response.Token'
        "400":
          description: Не валидный запрос.
          schema:
            $ref: '#/definitions/response.Error400'
        "401":
          description: Неверный или просроченный токен обновления.
          schema:
            $ref: '#/definitions/response.Error401'
        "500":
          description: Ошибка сервера.
      summary: Обновление токена
      tags:
      - Auth
  /auth/register:
    post:
      parameters:
      - description: Body params
        in: body
        name: request
        schema:
          $ref: '#/definitions/github_com_Brotiger_poker-core_api_core_api_module_auth_request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
          schema:
            $ref: '#/definitions/github_com_Brotiger_poker-core_api_core_api_module_auth_response.Register'
        "400":
          description: Не валидный запрос.
          schema:
            $ref: '#/definitions/response.Error400'
        "500":
          description: Ошибка сервера.
      summary: Регистрация
      tags:
      - Auth
  /game:
    get:
      parameters:
      - example: 0
        in: query
        minimum: 0
        name: from
        type: integer
      - example: test
        in: query
        name: name
        type: string
      - example: 20
        in: query
        minimum: 0
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
          schema:
            $ref: '#/definitions/github_com_Brotiger_poker-core_api_core_api_module_game_response.List'
        "400":
          description: Не валидный запрос.
          schema:
            $ref: '#/definitions/response.Error400'
        "401":
          description: Невалидный токен.
          schema:
            $ref: '#/definitions/response.Error401'
        "500":
          description: Ошибка сервера.
      security:
      - Authorization: []
      summary: Получение списка игр
      tags:
      - Game
    post:
      parameters:
      - description: Body params
        in: body
        name: request
        schema:
          $ref: '#/definitions/github_com_Brotiger_poker-core_api_core_api_module_game_request.Create'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
          schema:
            $ref: '#/definitions/github_com_Brotiger_poker-core_api_core_api_module_game_response.Create'
        "400":
          description: Не валидный запрос.
          schema:
            $ref: '#/definitions/response.Error400'
        "401":
          description: Невалидный токен.
          schema:
            $ref: '#/definitions/response.Error401'
        "500":
          description: Ошибка сервера.
      security:
      - Authorization: []
      summary: Создание игры
      tags:
      - Game
  /game/start:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
        "401":
          description: Невалидный токен.
        "500":
          description: Ошибка сервера.
      security:
      - Authorization: []
      summary: Запуск игры
      tags:
      - Game
securityDefinitions:
  Authorization:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
